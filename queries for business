/*
Description: This repository contains exploratory data analysis (EDA) queries and related business questions addressed in the project.
*/

--Explore all Objects in the Database
SELECT * FROM INFORMATION_SCHEMA.TABLES


--Explore All Columns in the Database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customer'

--Explore All Countries our customers come from
SELECT DISTINCT country FROM gold.dim_customer

--Explore All Categories “The major Divisions”
SELECT DISTINCT category, subcategory, product_name FROM gold.dim_products
ORDER BY 1,2,3


--Find the date of the first and last order
--How many years of sales are available
SELECT 
first_order_date, 
last_order_date, 
DATEDIFF (year, MIN(first_order_date), MAX(last_order_date)) AS order_range_years
FROM 
(
SELECT 
MIN(order_date) AS first_order_date,
MAX(order_date) AS last_order_date
FROM gold.fact_sales
) AS sub

--Find the youngest and the oldest customers
SELECT 
MIN(birthdate) AS oldest_birthdate,
DATEDIFF(year, MIN(birthdate), GETDATE()) AS oldest_age,
MAX(birthdate) AS youngest_birthdate,
DATEDIFF(year, MAX(birthdate), GETDATE()) AS youngest_age
FROM gold.dim_customer

--Find the Total Sales.
SELECT SUM(sales_amount) AS total_sales FROM Gold.fact_sales
--Find how many items are sold.
SELECT SUM(quantity) AS total_quantity FROM Gold.fact_sales
--Find the average selling price.
SELECT AVG(price) AS avg_price FROM Gold.fact_sales
--Find the Total Number of Orders.
SELECT COUNT(order_number) AS total_orders FROM Gold.fact_sales
SELECT COUNT(DISTINCT order_number) AS total_orders FROM Gold.fact_sales
--Find the total number of Products.
SELECT COUNT(product_key) AS total_products FROM Gold.fact_sales
SELECT COUNT(DISTINCT product_key) AS total_products FROM Gold.fact_sales
--Find the total number of Customers.
SELECT COUNT(customer_key) AS total_customers FROM Gold.dim_customer
--Find the total number of Customers that has placed an order.
SELECT COUNT(DISTINCT customer_key) AS total_customers FROM Gold.fact_sales

--Generate a Report that shows all key metrics of the business
SELECT 'Total Sales' as measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity', SUM(quantity) FROM Gold.fact_sales
UNION ALL
SELECT 'Average Price', AVG(price) FROM Gold.fact_sales
UNION ALL
SELECT 'Total Nr. Orders', COUNT(DISTINCT order_number) FROM Gold.fact_sales
UNION ALL
SELECT 'Total Nr. Products', COUNT(DISTINCT product_key) AS total_products FROM Gold.fact_sales
UNION ALL
SELECT 'Total Nr. Customers', COUNT(customer_key) FROM Gold.dim_customer

--Find total customers by countries
SELECT
country,
COUNT(customer_key) AS total_customers
FROM Gold.dim_customer
GROUP BY country
ORDER BY total_customers DESC

--Find total customers by gender
SELECT
gender,
COUNT(customer_key) AS total_customers
FROM Gold.dim_customer
GROUP BY gender
ORDER BY total_customers DESC




--Find total products by category
SELECT
category,
COUNT(product_key) AS total_products
FROM Gold.dim_products
GROUP BY category
ORDER BY total_products DESC


--What is the average costs in each category?
SELECT
category,
AVG(cost) AS avg_cost
FROM Gold.dim_products
GROUP BY category
ORDER BY avg_cost DESC

--What is the total revenue generated for each category?
SELECT
p.category,
SUM(f.sales_amount) total_revenue
FROM Gold.fact_sales f
LEFT JOIN Gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY total_revenue DESC

--Find total revenue is generated by each customer
SELECT
c.customer_key,
c.first_name,
c.last_name,
SUM(f.sales_amount) AS total_revenue
FROM Gold.fact_sales f
LEFT JOIN Gold.dim_customer c
ON c.customer_key = f.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_revenue DESC


--What is the distribution of sold items across countries？
SELECT
c.country,
SUM(f.quantity) AS total_sold_items
FROM Gold.fact_sales f
LEFT JOIN Gold.dim_customer c
ON c.customer_key = f.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC

--What are the 5 best-performing products in terms of sales？
SELECT TOP 5
p.product_name,
SUM(f.sales_amount) total_revenue
FROM Gold.fact_sales f
LEFT JOIN Gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC


SELECT*
FROM(
SELECT 
p.product_name,
SUM(f.sales_amount) total_revenue,
ROW_NUMBER() OVER (ORDER BY SUM(f.sales_amount) DESC) AS rank_products
FROM Gold.fact_sales f
LEFT JOIN Gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.product_name)t
WHERE rank_products <= 5


SELECT*
FROM(
SELECT 
p.product_name,
SUM(f.sales_amount) total_revenue,
RANK() OVER (ORDER BY SUM(f.sales_amount) DESC) AS rank_products
FROM Gold.fact_sales f
LEFT JOIN Gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.product_name)t
WHERE rank_products <= 5





--What are the 5 worst-performing products in terms of sales？
SELECT TOP 5
p.product_name,
SUM(f.sales_amount) total_revenue
FROM Gold.fact_sales f
LEFT JOIN Gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue 



